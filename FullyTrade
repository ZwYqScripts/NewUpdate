local Atlas = loadstring(game:HttpGet("https://siegehub.net/Atlas.lua"))()


local UI = Atlas.new({
    Name = "TradeScam | ZwYq / InsanityV4"; -- script name (required)
    ConfigFolder = "MyScript"; -- folder name to save configs to, set this to nil if you want to disable configs saving
    Credit = "Made By ZwYq#5964"; -- text to appear if player presses the "i" button on their UI (optional)
    Color = Color3.fromRGB(102,178,255); -- theme color for UI (required)
    Bind = "LeftControl"; -- keybind for toggling the UI, must be a valid KeyCode name
    -- Atlas Loader:
    UseLoader = false; -- whether to use Atlas Loader or not, if set to false than CheckKey and Discord are ignored
    FullName = "Trade Scam By ZwYq"; -- works if UseLoader is set to true, can be same as Name argument, shown on loader frame
    CheckKey = function(inputtedKey) -- works if UseLoader is set to true, where inputtedKey is the key inputted by the player
        return inputtedKey=="key1234"
    end;
    Discord = "https://discord.gg/xu5dDS3Pb9"; -- works if UseLoader is set to true, will be copied to clipboard if player presses "Copy Invite" button
})


local MyPage = UI:CreatePage("TradeScam")

local MySection = MyPage:CreateSection("TradeScam Executable :") -- creates a section in page with the name passed. This argument is reqiured.

MySection:CreateToggle({ -- IMPORTANT: This function does not return anything, please modify flags directly in order to read or update toggle values. SCROLL TO BOTTOM OF PAGE TO SEE HOW TO MODIFY FLAGS
	Name = "TradeScam {ON/OFF}"; -- required: name of element
	Flag = "MyToggle"; -- required: unique flag name to use
	Default = true; -- optional: default value for toggle, will be used if config saving is disabled and there is no saved data, will be false if left nil
	Callback = function(newValue)  -- optional: function that will be called when toggled, it is reccomended to modify flags directly  
		print("Toggle:",newValue)
	end;
	-- Scroll to the bottom of the page to read more about the following two:
	Warning = "Only Turn On In Trade!"; -- optional: this argument is used in all elements (except for Body) and will indicate text that will appear when the player hovers over the warning icon
	WarningIcon = 12345; -- optional: ImageAssetId for warning icon, will only be used if Warning is not nil, default is yellow warning icon.
})
MySection:CreateSlider({ -- IMPORTANT: This function does not return anything, please modify flags directly in order to read or update toggle values. SCROLL TO BOTTOM OF PAGE TO SEE HOW TO MODIFY FLAGS
	Name = "Amount Of MS {Milliseconds / Trade Lag}"; -- required: name of element 
	Flag = "MySlider"; -- required: unique flag name to use
	Min = 1; -- required: slider minimum drag 
	Max = 250; -- required: slider maximum drag (Max>Min or else script will error) 
	AllowOutOfRange = false; -- optional: determines whether the player can enter values outside of range Min:Max when typing in the TextBox. If left nil, this is false
	Digits = 2; -- optional: digits for rounding when dragging or entering values, default is 0 (whole numbers)
	Default = 10; -- optional: default value for slider, will be used if config saving is disabled and there is no saved data, will be the Min value if left nil
	Callback = function(newValue)  -- optional: function that will be called whenever slider flag is changed
		setclipboard("nofunctios")
	end;
	-- Scroll to the bottom of the page to read more about the following two:
	Warning = "Recommended over 100!"; -- optional: this argument is used in all elements (except for Body) and will indicate text that will appear when the player hovers over the warning icon
	WarningIcon = 12345; -- optional: ImageAssetId for warning icon, will only be used if Warning is not nil, default is yellow warning icon.
})


local MySection = MyPage:CreateSection("After Trade :")

MySection:CreateButton({
	Name = "Revert Lag"; -- required: name of element
	Callback = function()  -- required: function to be called when button is pressed
		print("Button pressed!")
	end
})

local MyParagraph = MySection:CreateParagraph("This Is Only The Free Version!")
local MyParagraph = MySection:CreateParagraph("Dm Me To Buy Premium (ZwYq#5964)")
